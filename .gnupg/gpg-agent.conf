# ╔═══════════════════════════════════════════════════════════════════════════╗
# ║ gpg-agent configuration (~/.gnupg/gpg-agent.conf)                         ║
# ║                                                                           ║
# ║ Note:                                                                     ║
# ║ After changing the configuration, reload the agent:                       ║
# ║   $ gpg-connect-agent reloadagent /bye                                    ║
# ╚═══════════════════════════════════════════════════════════════════════════╝

# Time a cache entry is valid (in seconds) default: 600
# Each time a cache entry is accessed, the entry's timer is reset
default-cache-ttl 600

# Set the maximum time a cache entry is valid to n seconds. After this time a 
# cache entry will be expired even if it has been accessed recently or has been 
# set using gpg-preset-passphrase. The default is 2 hours (7200 seconds).
max-cache-ttl 7200

# Use program filename as the PIN entry. The default is installation dependent. 
# With the default configuration the name of the default pinentry is pinentry; 
# if that file does not exist but a pinentry-basic exist the latter is used.
# brew install pinentry-mac
pinentry-program /usr/local/bin/pinentry-mac

# Use GnuPG agent for SSH keys (instead of ssh-agent)
# Note: Make sure that gpg-agent is always started with login.
#
# This can be done by adding the following to ~/.bashrc:
#   # Start gpg-agent if not already running
#   if ! pgrep -x -u "${USER}" gpg-agent &> /dev/null; then
#        gpg-connect-agent /bye &> /dev/null
#   fi
#
# Additionally add:
#   # Set SSH to use gpg-agent (see 'man gpg-agent', section EXAMPLES)
#   unset SSH_AGENT_PID
#   if [ "${gnupg_SSH_AUTH_SOCK_by:-0}" -ne $$ ]; then
#       # export SSH_AUTH_SOCK="/run/user/$UID/gnupg/S.gpg-agent.ssh"
#       export SSH_AUTH_SOCK="$(gpgconf --list-dirs agent-ssh-socket)"
#   fi
#
#   # Set GPG TTY as stated in 'man gpg-agent'
#   export GPG_TTY=$(tty)
#
#   # Refresh gpg-agent tty in case user switches into an X session
#   gpg-connect-agent updatestartuptty /bye > /dev/null
#
# For more details, see https://wiki.archlinux.org/title/GnuPG#SSH_agent
enable-ssh-support
